resolver 8.8.8.8;

# This should only be enabled for development
lua_code_cache off;

init_by_lua_block {
    oauth_authorize_url = 'https://github.com/login/oauth/authorize'
    oauth_client_secret = '871484b3b5c6de312b9775c8fd83148070fea9e8'
    oauth_client_id = 'e56a2dacb3bd51f67a56'
    oauth_org = 'refinery29'
    oauth_blacklist = ''
}

server {
  listen 80;

  # Or alternatively, and with lesser precedence:
  #
  # set $oauth_client_id '52c2259cf49c5736ac16';
  # set $oauth_client_secret '00e60d0af2b001838bcd6699b50c1c7605149dc8';
  # set $oauth_authorize_url 'https://github.com/login/oauth/authorize';
  # set $oauth_org 'refinery29';
  # set $oauth_blacklist '';

  location ~ /_oauth/api/(?<api_uri>.*) { proxy_pass https://api.github.com/$api_uri; }
  location /_oauth/access_token { proxy_pass https://github.com/login/oauth/access_token; }
  location /_oauth/callback { content_by_lua_file '/vagrant/oauth-callback.lua'; }
  location /_oauth/logout { content_by_lua_file '/vagrant/oauth-logout.lua'; }
  location /_oauth/login { content_by_lua_file '/vagrant/oauth-login.lua'; }

  location / {
      access_by_lua_file "/vagrant/oauth-access.lua";
      content_by_lua_block {
          ngx.header['Content-type'] = 'text/html'
          ngx.say('You have been authenticated')
          ngx.exit(ngx.HTTP_OK)
      }
  }
}
